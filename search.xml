<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/01/26/git-xue-xi/"/>
      <url>/2023/01/26/git-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Git学习"><a href="#Git学习" class="headerlink" title="Git学习"></a>Git学习</h1><p><a href="https://www.yuque.com/mqxu/nczwlh">Git 学习 · 语雀 (yuque.com)</a></p><h2 id="Git常用命令速查表"><a href="#Git常用命令速查表" class="headerlink" title="Git常用命令速查表"></a>Git常用命令速查表</h2><p><img src="https://chenpicture.oss-cn-shanghai.aliyuncs.com/img/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8.jpg"></p><h2 id="一、Git基础"><a href="#一、Git基础" class="headerlink" title="一、Git基础"></a>一、Git基础</h2><h3 id="使用Git之前需要做的小配置"><a href="#使用Git之前需要做的小配置" class="headerlink" title="使用Git之前需要做的小配置"></a><strong>使用Git之前需要做的小配置</strong></h3><p><img src="https://chenpicture.oss-cn-shanghai.aliyuncs.com/img/%E4%BD%BF%E7%94%A8Git%E4%B9%8B%E5%89%8D%E9%9C%80%E8%A6%81%E5%81%9A%E7%9A%84%E5%B0%8F%E9%85%8D%E7%BD%AE2.png"></p><h4 id="1-配置用户信息"><a href="#1-配置用户信息" class="headerlink" title="1.配置用户信息"></a>1.配置用户信息</h4><p><code>git config --global user.name 'Your Name'</code></p><p><code>git config --global user.email 'email@domain.com'</code></p><p><img src="https://chenpicture.oss-cn-shanghai.aliyuncs.com/img/%E4%BD%BF%E7%94%A8Git%E4%B9%8B%E5%89%8D%E9%9C%80%E8%A6%81%E5%81%9A%E7%9A%84%E5%B0%8F%E9%85%8D%E7%BD%AE1.png"></p><h4 id="2-查看文件所配置用户信息"><a href="#2-查看文件所配置用户信息" class="headerlink" title="2.查看文件所配置用户信息"></a>2.查看文件所配置用户信息</h4><p><code>git config --list --local</code></p><p><code>git config --list --global</code></p><p><code>git config --list --system</code></p><h3 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a><strong>创建Git仓库</strong></h3><h4 id="1-把已有的项目纳入Git管理"><a href="#1-把已有的项目纳入Git管理" class="headerlink" title="1.把已有的项目纳入Git管理"></a>1.把已有的项目纳入Git管理</h4><p><code>cd 项目代码所在的文件夹</code></p><p><code>git init</code></p><h4 id="2-新建的项目直接用Git管理"><a href="#2-新建的项目直接用Git管理" class="headerlink" title="2.新建的项目直接用Git管理"></a>2.新建的项目直接用Git管理</h4><p><code>cd 某个文件夹</code></p><p><code>git init your_project</code> #会在当前路径下创建和项目名称同名的文件夹</p><p><code>cd your_project</code></p><h3 id="打开本地仓库的文件夹"><a href="#打开本地仓库的文件夹" class="headerlink" title="打开本地仓库的文件夹"></a><strong>打开本地仓库的文件夹</strong></h3><p>1.直接在电脑上打开那个文件夹，然后在文件夹空白处右键选择Git Bash here</p><p>2.在Git Bash中输入路径</p><p><strong>注意！</strong>使用cd命令进入到目录中时，在Git-Bash中应该使用斜线”/”， 而不是反斜线”\”</p><p>①逐个输入文件夹名（在文件夹名称前要加cd ）</p><p>②直接输入一个完整的文件夹路径</p><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a><strong>查看</strong></h3><p><code>pwd</code> #当前目录</p><p><code>ls -al</code> 当前文件夹</p><p><code>git status</code> #文件夹状况</p><h3 id="退出文件夹"><a href="#退出文件夹" class="headerlink" title="退出文件夹"></a><strong>退出文件夹</strong></h3><p>输入<code>cd ..</code> 点和cd之间有空格</p><p>可以回退到上一个文件夹</p><h3 id="新建、删除"><a href="#新建、删除" class="headerlink" title="新建、删除"></a><strong>新建、删除</strong></h3><p><code>mkdir +文件夹名字</code> #只能新建文件夹</p><p><code>touch +文件名</code> #只能新建文件</p><p><code>rm 文件名.文件类型</code> #删除文件</p><p><code>rm -r 文件夹</code> #删除文件夹</p><p>**注意:**这个要回到上一级文件夹才可以删。比如要删除front-end文件夹，front-end在code里边，就要在code目录下删除</p><p><code>git reset --hard</code> #还原操作，删除暂存区工作路径变更</p><h3 id="通过几次commit来认识工作区和暂存区"><a href="#通过几次commit来认识工作区和暂存区" class="headerlink" title="通过几次commit来认识工作区和暂存区"></a><strong>通过几次commit来认识工作区和暂存区</strong></h3><p><code>git add 多个文件/文件夹</code> #添加进暂存区</p><h3 id="给文件重命名的简便方法"><a href="#给文件重命名的简便方法" class="headerlink" title="给文件重命名的简便方法"></a><strong>给文件重命名的简便方法</strong></h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>1.工作目录把readme变成readme.md</p><p>``mv readme readme.md`</p><p>2.把重命名后的文件添加进来</p><p><code>git add readme.md</code></p><p>3.把原来的文件删除</p><p><code>git rm readme</code></p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p><code>git mv readme readme.md</code> #readme要变更的文件名，readme.md要变更成的文件名</p><h3 id="通过git-log查看版本演变历史"><a href="#通过git-log查看版本演变历史" class="headerlink" title="通过git log查看版本演变历史"></a><strong>通过git log查看版本演变历史</strong></h3><h4 id="1-添加新文件到版本历史"><a href="#1-添加新文件到版本历史" class="headerlink" title="1.添加新文件到版本历史"></a>1.添加新文件到版本历史</h4><p><code>git commit -m '理由'</code></p><p><code>git commit -m</code> #将所有归git管的文件一起提交</p><p><code>git commit -am</code> #将工作区的东西一起加入版本历史中</p><h4 id="2-看版本演变历史"><a href="#2-看版本演变历史" class="headerlink" title="2.看版本演变历史"></a>2.看版本演变历史</h4><p><code>git log</code> </p><p>`git log –oneline</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hello</title>
      <link href="/2023/01/26/hello/"/>
      <url>/2023/01/26/hello/</url>
      
        <content type="html"><![CDATA[<h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2>]]></content>
      
      
      
        <tags>
            
            <tag> text,hello </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/26/hello-world/"/>
      <url>/2023/01/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
